// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should fail .dot-folder/dot-test.test.ts 1`] = `"AssertionError: expected true to be false // Object.is equality"`;

exports[`should fail async-assertion.test.ts 1`] = `
"AssertionError: expected 'xx' to be 'zz' // Object.is equality
AssertionError: expected 'xx' to be 'yy' // Object.is equality"
`;

exports[`should fail concurrent-suite-deadlock.test.ts 1`] = `"Error: Test timed out in 500ms."`;

exports[`should fail concurrent-test-deadlock.test.ts 1`] = `"Error: Test timed out in 500ms."`;

exports[`should fail each-timeout.test.ts 1`] = `"Error: Test timed out in 10ms."`;

exports[`should fail empty.test.ts 1`] = `"Error: No test suite found in file <rootDir>/empty.test.ts"`;

exports[`should fail expect.test.ts 1`] = `"AssertionError: expected 2 to deeply equal 3"`;

exports[`should fail expect-soft.test.ts 1`] = `"Error: expect.soft() can only be used inside a test"`;

exports[`should fail expect-unreachable.test.ts 1`] = `"AssertionError: expected "hi" not to be reached"`;

exports[`should fail hook-timeout.test.ts 1`] = `"Error: Hook timed out in 10ms."`;

exports[`should fail hooks-called.test.ts 1`] = `
"Error: after all
Error: before all"
`;

exports[`should fail hooks-fail-afterAll.test.ts 1`] = `"TypeError: "afterAll" callback value must be function, received "string""`;

exports[`should fail hooks-fail-afterEach.test.ts 1`] = `"TypeError: "afterEach" callback value must be function, received "string""`;

exports[`should fail hooks-fail-beforeAll.test.ts 1`] = `"TypeError: "beforeAll" callback value must be function, received "string""`;

exports[`should fail hooks-fail-beforeEach.test.ts 1`] = `"TypeError: "beforeEach" callback value must be function, received "string""`;

exports[`should fail inline-snapshop-inside-each.test.ts 1`] = `
"Error: InlineSnapshot cannot be used inside of test.each or describe.each
Error: InlineSnapshot cannot be used inside of test.each or describe.each
Error: InlineSnapshot cannot be used inside of test.each or describe.each
Error: InlineSnapshot cannot be used inside of test.each or describe.each
Error: InlineSnapshot cannot be used inside of test.each or describe.each"
`;

exports[`should fail inline-snapshop-inside-loop.test.ts 1`] = `
"Error: toMatchInlineSnapshot cannot be called multiple times at the same location.
Error: toMatchInlineSnapshot cannot be called multiple times at the same location.
Error: toMatchInlineSnapshot cannot be called multiple times at the same location.
Error: toMatchInlineSnapshot cannot be called multiple times at the same location.
Error: toMatchInlineSnapshot cannot be called multiple times at the same location."
`;

exports[`should fail mock-import-proxy-module.test.ts 1`] = `"Error: There are some problems in resolving the mocks API."`;

exports[`should fail nested-suite.test.ts 1`] = `"AssertionError: expected true to be false // Object.is equality"`;

exports[`should fail no-assertions.test.ts 1`] = `"Error: expected any number of assertion, but got none"`;

exports[`should fail node-browser-context.test.ts 1`] = `"Error: @vitest/browser/context can be imported only inside the Browser Mode. Your test is running in forks pool. Make sure your regular tests are excluded from the "test.include" glob pattern."`;

exports[`should fail poll-no-awaited.test.ts 1`] = `
"Error: expect.poll(assertion).toBe() was not awaited. This assertion is asynchronous and must be awaited; otherwise, it is not executed to avoid unhandled rejections:
AssertionError: expected 3 to be 4 // Object.is equality
Error: expect.poll(assertion).toBe() was not awaited. This assertion is asynchronous and must be awaited; otherwise, it is not executed to avoid unhandled rejections:
Error: expect.poll(assertion).toBe() was not awaited. This assertion is asynchronous and must be awaited; otherwise, it is not executed to avoid unhandled rejections:
Error: expect.poll(assertion).not.toBe() was not awaited. This assertion is asynchronous and must be awaited; otherwise, it is not executed to avoid unhandled rejections:
Error: expect.poll(assertion).toBe() was not awaited. This assertion is asynchronous and must be awaited; otherwise, it is not executed to avoid unhandled rejections:"
`;

exports[`should fail primitive-error.test.ts 1`] = `"Unknown Error: 42"`;

exports[`should fail snapshot-with-not.test.ts 1`] = `
"Error: toThrowErrorMatchingInlineSnapshot cannot be used with "not"
Error: toThrowErrorMatchingSnapshot cannot be used with "not"
Error: toMatchInlineSnapshot cannot be used with "not"
Error: toMatchFileSnapshot cannot be used with "not"
Error: toMatchSnapshot cannot be used with "not""
`;

exports[`should fail stall.test.ts 1`] = `
"TypeError: failure
TypeError: failure
TypeError: failure
TypeError: failure"
`;

exports[`should fail test-extend/circular-dependency.test.ts 1`] = `"Error: Circular fixture dependency detected: a <- b <- a"`;

exports[`should fail test-extend/fixture-error.test.ts 1`] = `
"Error: Error fixture teardown
Error: Test timed out in 20ms.
Error: Error thrown in test fixture
Error: Error thrown in afterEach fixture
Error: Error thrown in beforeEach fixture"
`;

exports[`should fail test-extend/fixture-rest-params.test.ts 1`] = `"Error: The first argument inside a fixture must use object destructuring pattern, e.g. ({ test } => {}). Instead, received "...rest"."`;

exports[`should fail test-extend/fixture-rest-props.test.ts 1`] = `"Error: Rest parameters are not supported in fixtures, received "...rest"."`;

exports[`should fail test-extend/fixture-without-destructuring.test.ts 1`] = `"Error: The first argument inside a fixture must use object destructuring pattern, e.g. ({ test } => {}). Instead, received "context"."`;

exports[`should fail test-extend/test-rest-params.test.ts 1`] = `"Error: The first argument inside a fixture must use object destructuring pattern, e.g. ({ test } => {}). Instead, received "...rest"."`;

exports[`should fail test-extend/test-rest-props.test.ts 1`] = `"Error: Rest parameters are not supported in fixtures, received "...rest"."`;

exports[`should fail test-extend/test-without-destructuring.test.ts 1`] = `"Error: The first argument inside a fixture must use object destructuring pattern, e.g. ({ test } => {}). Instead, received "context"."`;

exports[`should fail test-timeout.test.ts 1`] = `
"Error: Test timed out in 20ms.
Error: Test timed out in 200ms.
Error: Test timed out in 100ms.
Error: Test timed out in 15ms.
Error: Test timed out in 10ms."
`;

exports[`should fail unhandled.test.ts 1`] = `
"Error: some error
Error: Uncaught [Error: some error]"
`;
